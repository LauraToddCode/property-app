{"version":3,"sources":["Components/MapView.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js"],"names":["Filters","lazy","ToggleViewNav","Map","MapView","React","useState","minPrice","maxPrice","minBedrooms","maxBedrooms","state","setState","className","fallback","handleChange","evt","value","target","name","minPriceValue","maxPriceValue","minBedroomsValue","maxBedroomsValue","id","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","length","err","unsupportedIterableToArray","TypeError"],"mappings":"8KAEMA,EAAUC,gBAAK,kBAAM,iCACrBC,EAAgBD,gBAAK,kBAAM,iCAC3BE,EAAMF,gBAAK,kBAAM,sEA0CRG,UAxCf,WAAoB,IAAD,EAEWC,IAAMC,SAAS,CACrCC,SAAU,EACVC,SAAU,IACVC,YAAa,EACbC,YAAa,KANF,mBAERC,EAFQ,KAEDC,EAFC,KAiBf,OACI,qBAAKC,UAAU,eAAf,SACI,eAAC,WAAD,CAAUC,SAAU,wBAApB,UACI,cAACd,EAAD,CACIe,aAZhB,SAAsBC,GAClB,IAAMC,EAAQD,EAAIE,OAAOD,MACzBL,EAAS,2BACJD,GADG,kBAELK,EAAIE,OAAOC,KAAOF,MASTG,cAAeT,EAAMJ,SACrBc,cAAeV,EAAMH,SACrBc,iBAAkBX,EAAMF,YACxBc,iBAAkBZ,EAAMD,cAE5B,sBAAKc,GAAG,WAAR,UACI,cAACtB,EAAD,IACA,qBAAKsB,GAAG,eAAR,SACI,qBAAKA,GAAG,cAAR,SACI,cAACrB,EAAD,kB,8ECjCb,SAASsB,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXG,QAA4BA,OAAOC,YAAYC,OAAON,GAAjE,CACA,IAAIO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKb,EAAII,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGrB,QAETU,GAAKM,EAAKU,SAAWhB,GAH8CO,GAAK,IAK9E,MAAOU,GACPT,GAAK,EACLC,EAAKQ,EACL,QACA,IACOV,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBP,EAAKC,IAAM,OAAAkB,EAAA,GAA2BnB,EAAKC,IGLjF,WACb,MAAM,IAAImB,UAAU,6IHIgF","file":"static/js/16.d8a11116.chunk.js","sourcesContent":["import React, { Suspense, lazy } from \"react\";\r\n\r\nconst Filters = lazy(() => import(\"./Filters\"));\r\nconst ToggleViewNav = lazy(() => import(\"./ToggleViewNav\"));\r\nconst Map = lazy(() => import(\"./MapView/Map\"));\r\n\r\nfunction MapView() {\r\n\r\n    const [state, setState] = React.useState({\r\n        minPrice: 0,\r\n        maxPrice: 1000000,\r\n        minBedrooms: 1,\r\n        maxBedrooms: 10\r\n    })\r\n\r\n    function handleChange(evt) {\r\n        const value = evt.target.value;\r\n        setState({\r\n          ...state,\r\n          [evt.target.name]: value\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"appContainer\">\r\n            <Suspense fallback={<div></div>}>\r\n                <Filters \r\n                    handleChange={handleChange} \r\n                    minPriceValue={state.minPrice} \r\n                    maxPriceValue={state.maxPrice} \r\n                    minBedroomsValue={state.minBedrooms} \r\n                    maxBedroomsValue={state.maxBedrooms}\r\n                />\r\n                <div id=\"mapPanel\">\r\n                    <ToggleViewNav />\r\n                    <div id=\"mapContainer\">\r\n                        <div id=\"mapClipPath\">\r\n                            <Map />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Suspense>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MapView","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"sourceRoot":""}