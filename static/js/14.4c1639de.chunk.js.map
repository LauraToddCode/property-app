{"version":3,"sources":["Components/MapView/MarkerInfo.js","Components/MapView/Map.js","redux/save/save-actions.js"],"names":["MarkerInfo","props","className","src","process","img","price","beds","type","baths","living","href","id","onClick","event","preventDefault","findOutMore","currentTarget","getAttribute","saveItem","WrappedMap","connect","state","minPrice","save","maxPrice","minBedrooms","maxBedrooms","dispatch","addToSaved","loadCurrentItem","item","withScriptjs","withGoogleMap","history","useHistory","useState","selectedProperty","setSelectedProperty","defaultZoom","defaultCenter","lat","lng","properties","map","property","bedrooms","position","icon","url","scaledSize","window","google","maps","Size","onCloseClick","imgs","displayPrice","bathrooms","livingRooms","push","Map","googleMapURL","loadingElement","style","height","containerElement","mapElement","itemID","actionTypes","payload","removeFromSaved","getMinPriceValue","value","getMaxPriceValue","getMinBedsValue","getMaxBedsValue"],"mappings":"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","file":"static/js/14.4c1639de.chunk.js","sourcesContent":["import React from \"react\";\r\nimport BathtubIcon from '@material-ui/icons/Bathtub';\r\nimport KingBedIcon from '@material-ui/icons/KingBed';\r\nimport WeekendIcon from '@material-ui/icons/Weekend';\r\n\r\nfunction MarkerInfo(props) {\r\n\r\n    function redirectToProfilePage(event) {\r\n\t\tevent.preventDefault();\r\n\t\tprops.findOutMore(event.currentTarget.getAttribute('href'));\r\n\t}\r\n\r\n    return (\r\n        <div className=\"infoWindow\">\r\n            <div className=\"infoCol1\">\r\n                <img src={process.env.PUBLIC_URL + \"/images/properties/\" + props.img} className=\"windowInfoImg\"/>\r\n                <p className=\"infoWindowPrice\">{props.price}</p>\r\n                <p className=\"infoTagLine\">{props.beds} bedroom {props.type}</p>\r\n            </div>\r\n            <div className=\"infoCol2\">\r\n                <div className=\"infoRoomTypes\">\r\n                    <div className=\"infoRoomType\">\r\n                        <KingBedIcon />\r\n                        <p>{props.beds}</p>\r\n                    </div>\r\n                    <div className=\"infoRoomType\">\r\n                        <BathtubIcon />\r\n                        <p>{props.baths}</p>\r\n                    </div>\r\n                    <div className=\"infoRoomType\">\r\n                        <WeekendIcon />\r\n                        <p>{props.living}</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"infoWindowBtnsContainer\">\r\n                    <a href={`/property-profile/${props.id}`} className=\"moreBtn infoWindowBtns\" onClick={redirectToProfilePage}>\r\n                        find out more\r\n                    </a>\r\n\r\n                    <button className=\"saveBtn infoWindowBtns\" onClick={props.saveItem}>save</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MarkerInfo","import React, { useState } from \"react\";\r\nimport { \r\n    GoogleMap, \r\n    withScriptjs, \r\n    withGoogleMap, \r\n    Marker,\r\n    InfoWindow \r\n} from \"react-google-maps\";\r\nimport properties from \"../properties.json\";\r\nimport MarkerInfo from \"./MarkerInfo\";\r\nimport { connect } from \"react-redux\";\r\nimport { addToSaved, loadCurrentItem } from \"../../redux/save/save-actions\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nfunction MapComponent({ minPrice, maxPrice, minBedrooms, maxBedrooms, addToSaved, loadCurrentItem }) {\r\n    const history = useHistory();\r\n    const validProperty = (price, beds) => price >= minPrice && price <= maxPrice && beds >= minBedrooms && beds <= maxBedrooms;\r\n\r\n    const [selectedProperty, setSelectedProperty] = useState(null);\r\n    \r\n    function redirectToPropertyPage(href) {\r\n        loadCurrentItem(selectedProperty);\r\n        history.push(href);\r\n    }\r\n\r\n\r\n    return (\r\n        <GoogleMap \r\n            defaultZoom={12}\r\n            defaultCenter={{ lat: 51.23651480350905, lng: -0.5703780104611352 }}\r\n        >\r\n            {properties.map((property) => validProperty(property.price, property.bedrooms) && (\r\n                <Marker \r\n                    key={property.id} \r\n                    position={{\r\n                        lat: property.lat, \r\n                        lng: property.lng\r\n                    }}\r\n                    onClick ={() => {\r\n                        setSelectedProperty(property);\r\n                    }}\r\n                    icon={{\r\n                        url: \"/images/mapIcon/houseIcon.png\",\r\n                        scaledSize: new window.google.maps.Size(25, 25)\r\n                    }}\r\n                />\r\n            ))}\r\n\r\n            {selectedProperty && (\r\n                <InfoWindow\r\n                    position={{\r\n                        lat: selectedProperty.lat, \r\n                        lng: selectedProperty.lng\r\n                    }}\r\n                    onCloseClick={() => {\r\n                        setSelectedProperty(null);\r\n                    }}\r\n                >\r\n                    <MarkerInfo \r\n                        key={selectedProperty.id}\r\n                        id={selectedProperty.id}\r\n                        img={selectedProperty.imgs[0]}\r\n                        price={selectedProperty.displayPrice}\r\n                        type={selectedProperty.type}\r\n                        beds={selectedProperty.bedrooms}\r\n                        baths={selectedProperty.bathrooms}\r\n                        living={selectedProperty.livingRooms}\r\n                        findOutMore={redirectToPropertyPage}\r\n                        saveItem={() => addToSaved(selectedProperty.id)}\r\n                    />\r\n                </InfoWindow>\r\n            )}\r\n        </GoogleMap>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        minPrice: state.save.minPrice,\r\n        maxPrice: state.save.maxPrice,\r\n        minBedrooms: state.save.minBedrooms,\r\n        maxBedrooms: state.save.maxBedrooms\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        addToSaved: (id) => dispatch(addToSaved(id)),\r\n        loadCurrentItem: (item) => dispatch(loadCurrentItem(item))\r\n    }\r\n}\r\n\r\nconst WrappedMap = connect(mapStateToProps, mapDispatchToProps)(withScriptjs(withGoogleMap(MapComponent)));\r\n\r\nfunction Map() {\r\n    return (\r\n        <WrappedMap \r\n            googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=AIzaSyCVc5BV5f51pj4r0K3RhGy4EDVGFKyGfqo`}\r\n            loadingElement={<div style={{ height:\"100%\"}} />}\r\n            containerElement={<div style={{ height:\"100%\"}} />}\r\n            mapElement={<div style={{ height:\"100%\"}} />}\r\n        />\r\n    )\r\n}\r\n\r\nexport default Map;","import * as actionTypes from \"./save-types\";\r\n\r\nexport const addToSaved = (itemID) => {\r\n    return {\r\n        type: actionTypes.ADD_TO_SAVED,\r\n        payload: {\r\n            id: itemID\r\n        }\r\n    }\r\n}\r\n\r\nexport const removeFromSaved = (itemID) => {\r\n    return {\r\n        type: actionTypes.REMOVE_FROM_SAVED,\r\n        payload: {\r\n            id: itemID\r\n        }\r\n    }\r\n}\r\n\r\nexport const loadCurrentItem = (item) => {\r\n    return {\r\n        type: actionTypes.LOAD_CURRENT_ITEM,\r\n        payload: item\r\n    }\r\n}\r\n\r\nexport const getMinPriceValue = (value) => {\r\n    return {\r\n        type: actionTypes.GET_MINPRICE_VALUE,\r\n        payload: value\r\n    }\r\n}\r\n\r\nexport const getMaxPriceValue = (value) => {\r\n    return {\r\n        type: actionTypes.GET_MAXPRICE_VALUE,\r\n        payload: value\r\n    }\r\n}\r\n\r\nexport const getMinBedsValue = (value) => {\r\n    return {\r\n        type: actionTypes.GET_MINBEDS_VALUE,\r\n        payload: value\r\n    }\r\n}\r\n\r\nexport const getMaxBedsValue = (value) => {\r\n    return {\r\n        type: actionTypes.GET_MAXBEDS_VALUE,\r\n        payload: value\r\n    }\r\n}"],"sourceRoot":""}