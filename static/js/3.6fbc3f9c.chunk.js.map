{"version":3,"sources":["Components/Filters.js","redux/save/save-actions.js"],"names":["connect","state","minPrice","save","maxPrice","minBedrooms","maxBedrooms","dispatch","getMinPriceValue","value","getMaxPriceValue","getMinBedsValue","getMaxBedsValue","id","className","name","onChange","event","parseInt","currentTarget","prices","map","price","bedrooms","num","addToSaved","itemID","type","actionTypes","payload","removeFromSaved","loadCurrentItem","item"],"mappings":"oHAAA,yDA6EeA,uBAlBS,SAAAC,GACpB,MAAO,CACHC,SAAUD,EAAME,KAAKD,SACrBE,SAAUH,EAAME,KAAKC,SACrBC,YAAaJ,EAAME,KAAKE,YACxBC,YAAaL,EAAME,KAAKG,gBAIL,SAAAC,GACvB,MAAO,CACHC,iBAAkB,SAACC,GAAD,OAAWF,EAASC,YAAiBC,KACvDC,iBAAkB,SAACD,GAAD,OAAWF,EAASG,YAAiBD,KACvDE,gBAAiB,SAACF,GAAD,OAAWF,EAASI,YAAgBF,KACrDG,gBAAiB,SAACH,GAAD,OAAWF,EAASK,YAAgBH,QAI9CT,EArEf,YAA0I,IAAvHQ,EAAsH,EAAtHA,iBAAkBE,EAAoG,EAApGA,iBAAkBC,EAAkF,EAAlFA,gBAAiBC,EAAiE,EAAjEA,gBAAiBV,EAAgD,EAAhDA,SAAUE,EAAsC,EAAtCA,SAAUC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,YAEtH,OACI,sBAAKO,GAAG,UAAR,UACI,oBAAIA,GAAG,cAAP,+BACA,sBAAKA,GAAG,kBAAR,UACI,uBAAMC,UAAU,aAAhB,UACI,+CACA,wBACIC,KAAK,WACLN,MAAOP,EACPc,SAAU,SAACC,GAAD,OAAWT,EAAiBU,SAASD,EAAME,cAAcV,SAHvE,SAKKW,EAAOC,KAAI,SAAAC,GAAK,OAAI,yBAA0Bb,MAAOa,EAAMA,MAAvC,iBAAgDA,EAAMA,QAAzCA,EAAMA,eAGhD,uBAAMR,UAAU,aAAhB,UACI,+CACA,wBACIC,KAAK,WACLN,MAAOL,EACPY,SAAU,SAACC,GAAD,OAAWP,EAAiBQ,SAASD,EAAME,cAAcV,SAHvE,SAKKW,EAAOC,KAAI,SAAAC,GAAK,OAAI,yBAA0Bb,MAAOa,EAAMA,MAAvC,iBAAgDA,EAAMA,QAAzCA,EAAMA,eAGhD,uBAAMR,UAAU,aAAhB,UACI,yDACA,wBACIC,KAAK,cACLN,MAAOJ,EACPW,SAAU,SAACC,GAAD,OAAWN,EAAgBO,SAASD,EAAME,cAAcV,SAHtE,SAKKc,EAASF,KAAI,SAAAG,GAAG,OAAI,wBAA2Bf,MAAOe,EAAID,SAAtC,SAAiDC,EAAID,UAAxCC,EAAID,kBAG9C,uBAAMT,UAAU,aAAhB,UACI,yDACA,wBACIC,KAAK,cACLN,MAAOH,EACPU,SAAU,SAACC,GAAD,OAAWL,EAAgBM,SAASD,EAAME,cAAcV,SAHtE,SAKKc,EAASF,KAAI,SAAAG,GAAG,OAAI,wBAA2Bf,MAAOe,EAAID,SAAtC,SAAiDC,EAAID,UAAxCC,EAAID,4B,6mBCnD9D,yPAEaE,EAAa,SAACC,GACvB,MAAO,CACHC,KAAMC,IACNC,QAAS,CACLhB,GAAIa,KAKHI,EAAkB,SAACJ,GAC5B,MAAO,CACHC,KAAMC,IACNC,QAAS,CACLhB,GAAIa,KAKHK,EAAkB,SAACC,GAC5B,MAAO,CACHL,KAAMC,IACNC,QAASG,IAIJxB,EAAmB,SAACC,GAC7B,MAAO,CACHkB,KAAMC,IACNC,QAASpB,IAIJC,EAAmB,SAACD,GAC7B,MAAO,CACHkB,KAAMC,IACNC,QAASpB,IAIJE,EAAkB,SAACF,GAC5B,MAAO,CACHkB,KAAMC,IACNC,QAASpB,IAIJG,EAAkB,SAACH,GAC5B,MAAO,CACHkB,KAAMC,IACNC,QAASpB","file":"static/js/3.6fbc3f9c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport prices from \"./priceFilters.json\";\r\nimport bedrooms from \"./noOfBedroomsFilter.json\";\r\nimport { connect } from \"react-redux\";\r\nimport { getMinPriceValue, getMaxPriceValue, getMinBedsValue, getMaxBedsValue } from \"../redux/save/save-actions\";\r\nimport { Label } from \"@material-ui/icons\";\r\n\r\n\r\nfunction Filters({ getMinPriceValue, getMaxPriceValue, getMinBedsValue, getMaxBedsValue, minPrice, maxPrice, minBedrooms, maxBedrooms }) {\r\n\r\n    return (\r\n        <div id=\"filters\">\r\n            <h3 id=\"startSearch\">start your search</h3>\r\n            <div id=\"filterDropdowns\">\r\n                <form className=\"indiFilter\">\r\n                    <label>Min Price:</label>\r\n                    <select\r\n                        name=\"minPrice\"\r\n                        value={minPrice} \r\n                        onChange={(event) => getMinPriceValue(parseInt(event.currentTarget.value))}\r\n                    >\r\n                        {prices.map(price => <option key={price.price} value={price.price}>£{price.price}</option>)}\r\n                    </select>\r\n                </form>\r\n                <form className=\"indiFilter\">\r\n                    <label>Max Price:</label>\r\n                    <select \r\n                        name=\"maxPrice\"\r\n                        value={maxPrice} \r\n                        onChange={(event) => getMaxPriceValue(parseInt(event.currentTarget.value))}\r\n                    >\r\n                        {prices.map(price => <option key={price.price} value={price.price}>£{price.price}</option>)}\r\n                    </select>\r\n                </form>\r\n                <form className=\"indiFilter\">\r\n                    <label>Min no. of bedrooms:</label>\r\n                    <select \r\n                        name=\"minBedrooms\"\r\n                        value={minBedrooms}\r\n                        onChange={(event) => getMinBedsValue(parseInt(event.currentTarget.value))}\r\n                    >\r\n                        {bedrooms.map(num => <option key={num.bedrooms} value={num.bedrooms}>{num.bedrooms}</option>)}\r\n                    </select>\r\n                </form>\r\n                <form className=\"indiFilter\">\r\n                    <label>Max no. of bedrooms:</label>\r\n                    <select \r\n                        name=\"maxBedrooms\"\r\n                        value={maxBedrooms}\r\n                        onChange={(event) => getMaxBedsValue(parseInt(event.currentTarget.value))} \r\n                    >\r\n                        {bedrooms.map(num => <option key={num.bedrooms} value={num.bedrooms}>{num.bedrooms}</option>)}\r\n                    </select>\r\n                </form>         \r\n            </div>          \r\n        </div>\r\n    )\r\n} \r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        minPrice: state.save.minPrice,\r\n        maxPrice: state.save.maxPrice,\r\n        minBedrooms: state.save.minBedrooms,\r\n        maxBedrooms: state.save.maxBedrooms\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getMinPriceValue: (value) => dispatch(getMinPriceValue(value)),\r\n        getMaxPriceValue: (value) => dispatch(getMaxPriceValue(value)),\r\n        getMinBedsValue: (value) => dispatch(getMinBedsValue(value)),\r\n        getMaxBedsValue: (value) => dispatch(getMaxBedsValue(value))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filters)","import * as actionTypes from \"./save-types\";\r\n\r\nexport const addToSaved = (itemID) => {\r\n    return {\r\n        type: actionTypes.ADD_TO_SAVED,\r\n        payload: {\r\n            id: itemID\r\n        }\r\n    }\r\n}\r\n\r\nexport const removeFromSaved = (itemID) => {\r\n    return {\r\n        type: actionTypes.REMOVE_FROM_SAVED,\r\n        payload: {\r\n            id: itemID\r\n        }\r\n    }\r\n}\r\n\r\nexport const loadCurrentItem = (item) => {\r\n    return {\r\n        type: actionTypes.LOAD_CURRENT_ITEM,\r\n        payload: item\r\n    }\r\n}\r\n\r\nexport const getMinPriceValue = (value) => {\r\n    return {\r\n        type: actionTypes.GET_MINPRICE_VALUE,\r\n        payload: value\r\n    }\r\n}\r\n\r\nexport const getMaxPriceValue = (value) => {\r\n    return {\r\n        type: actionTypes.GET_MAXPRICE_VALUE,\r\n        payload: value\r\n    }\r\n}\r\n\r\nexport const getMinBedsValue = (value) => {\r\n    return {\r\n        type: actionTypes.GET_MINBEDS_VALUE,\r\n        payload: value\r\n    }\r\n}\r\n\r\nexport const getMaxBedsValue = (value) => {\r\n    return {\r\n        type: actionTypes.GET_MAXBEDS_VALUE,\r\n        payload: value\r\n    }\r\n}"],"sourceRoot":""}