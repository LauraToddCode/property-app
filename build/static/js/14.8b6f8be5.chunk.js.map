{"version":3,"sources":["common/Spinner.js","pages/list/sortMenuItems.js","pages/list/ListView.js","pages/list/sortProperties.js"],"names":["Spinner","id","sortMenuItems","value","label","Filters","lazy","ToggleViewNav","ListViewCard","connect","state","properties","save","minPrice","maxPrice","minBedrooms","maxBedrooms","formControlStyles","margin","useTheme","spacing","minWidth","React","useState","setSortedProperties","className","fallback","FormControl","sx","InputLabel","Select","labelId","defaultValue","onChange","event","sortBy","sortedProperties","sort","a","b","sortProperties","target","map","item","key","MenuItem","property","price","beds","bedrooms","propertyData"],"mappings":"qHAAA,sDAEO,SAASA,IACd,OACE,yBAAKC,GAAG,oBACN,yBAAKA,GAAG,e,gICLDC,EAAgB,CAC5B,CACCC,MAAO,iBACPC,MAAO,uBAER,CACCD,MAAO,iBACPC,MAAO,uBAER,CACCD,MAAO,gBACPC,MAAO,0BAER,CACCD,MAAO,gBACPC,MAAO,2BCDT,IAAMC,EAAUC,gBAAK,kBAAM,iCACrBC,EAAgBD,gBAAK,kBAAM,iCAC3BE,EAAeF,gBAAK,kBAAM,iCA+EjBG,uBAVS,SAACC,GACxB,MAAO,CACNC,WAAYD,EAAME,KAAKD,WACvBE,SAAUH,EAAME,KAAKC,SACrBC,SAAUJ,EAAME,KAAKE,SACrBC,YAAaL,EAAME,KAAKG,YACxBC,YAAaN,EAAME,KAAKI,eAIXP,EA7Ef,YAMI,IALHE,EAKE,EALFA,WACAE,EAIE,EAJFA,SACAC,EAGE,EAHFA,SACAC,EAEE,EAFFA,YACAC,EACE,EADFA,YAIMC,EAAoB,CACzBC,OAHaC,cAGCC,QAAQ,GACtBC,SAAU,KALT,EAiB8CC,IAAMC,SAASZ,GAjB7D,mBAiBuBa,GAjBvB,WAwBF,OACC,yBAAKC,UAAU,gBACd,kBAAC,WAAD,CAAUC,SAAU,kBAAC1B,EAAA,EAAD,OACnB,kBAACK,EAAD,MACA,6BACC,kBAACE,EAAD,MAEA,yBAAKkB,UAAU,gBACd,kBAACE,EAAA,EAAD,CAAaC,GAAIX,GAChB,kBAACY,EAAA,EAAD,CAAY5B,GAAG,wBAAf,YACA,kBAAC6B,EAAA,EAAD,CACCC,QAAQ,uBACR9B,GAAG,qBACH+B,aAAa,gBACbC,SAnBY,SAACC,IC3Cd,SAAwBC,EAAQxB,EAAYa,GAGnC,mBAAXW,EAIHX,EAAoB,CAAEY,iBAHbzB,EAAW0B,MAAK,SAACC,EAAGC,GAAJ,OACxBA,EAAC,MAAYD,EAAC,MAAY,EAAIA,EAAC,MAAYC,EAAC,OAAa,EAAI,OAGzC,mBAAXJ,EAIVX,EAAoB,CAAEY,iBAHbzB,EAAW0B,MAAK,SAACC,EAAGC,GAAJ,OACxBD,EAAC,MAAYC,EAAC,MAAY,EAAIA,EAAC,MAAYD,EAAC,OAAa,EAAI,OAGzC,kBAAXH,EAIVX,EAAoB,CAAEY,iBAHbzB,EAAW0B,MAAK,SAACC,EAAGC,GAAJ,OACxBA,EAAC,SAAeD,EAAC,SAAe,EAAIA,EAAC,SAAeC,EAAC,UAAgB,EAAI,OAGrD,kBAAXJ,GAIVX,EAAoB,CAAEY,iBAHbzB,EAAW0B,MAAK,SAACC,EAAGC,GAAJ,OACxBD,EAAC,SAAeC,EAAC,SAAe,EAAIA,EAAC,SAAeD,EAAC,UAAgB,EAAI,ODyB1EE,CADaN,EAAMO,OAAOtC,MACHQ,EAAYa,IAkB7BpB,MAAM,YAELF,EAAcwC,KAAI,SAACC,EAAMC,GAAP,OAClB,kBAACC,EAAA,EAAD,CAAUD,IAAKA,EAAKzC,MAAOwC,EAAKxC,OAC9BwC,EAAKvC,YAKTO,EAAW+B,KACX,SAACI,GAAD,OAxCiBC,EAyCFD,EAASC,MAzCAC,EAyCOF,EAASG,SAxC7CF,GAASlC,GACTkC,GAASjC,GACTkC,GAAQjC,GACRiC,GAAQhC,GAsCD,kBAACR,EAAD,CAAcoC,IAAKE,EAAS7C,GAAIiD,aAAcJ,IA1ChC,IAACC,EAAOC","file":"static/js/14.8b6f8be5.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport function Spinner() {\r\n  return (\r\n    <div id=\"spinnerContainer\">\r\n      <div id=\"spinner\"></div>\r\n    </div>\r\n  )\r\n}\r\n","export const sortMenuItems = [\r\n\t{\r\n\t\tvalue: \"priceHighToLow\",\r\n\t\tlabel: \"Price - High to Low\",\r\n\t},\r\n\t{\r\n\t\tvalue: \"priceLowToHigh\",\r\n\t\tlabel: \"Price - Low to High\",\r\n\t},\r\n\t{\r\n\t\tvalue: \"bedsHighToLow\",\r\n\t\tlabel: \"Bedrooms - High to Low\",\r\n\t},\r\n\t{\r\n\t\tvalue: \"bedsLowToHigh\",\r\n\t\tlabel: \"Bedrooms - Low to High\",\r\n\t},\r\n]\r\n","import {\r\n\tFormControl,\r\n\tInputLabel,\r\n\tMenuItem,\r\n\tSelect,\r\n\tuseTheme,\r\n} from \"@mui/material\"\r\nimport React, { Suspense, lazy } from \"react\"\r\n\r\nimport { Spinner } from \"../../common/Spinner\"\r\nimport { connect } from \"react-redux\"\r\nimport { sortMenuItems } from \"./sortMenuItems\"\r\nimport { sortProperties } from \"./sortProperties\"\r\n\r\nconst Filters = lazy(() => import(\"../../common/Filters\"))\r\nconst ToggleViewNav = lazy(() => import(\"../../common/ToggleViewNav\"))\r\nconst ListViewCard = lazy(() => import(\"./ListViewCard\"))\r\n\r\nfunction ListView({\r\n\tproperties,\r\n\tminPrice,\r\n\tmaxPrice,\r\n\tminBedrooms,\r\n\tmaxBedrooms,\r\n}) {\r\n\tconst theme = useTheme()\r\n\r\n\tconst formControlStyles = {\r\n\t\tmargin: theme.spacing(1),\r\n\t\tminWidth: 120,\r\n\t}\r\n\r\n\t// conditions for a property to be valid within parameters of filters\r\n\tconst validProperty = (price, beds) =>\r\n\t\tprice >= minPrice &&\r\n\t\tprice <= maxPrice &&\r\n\t\tbeds >= minBedrooms &&\r\n\t\tbeds <= maxBedrooms\r\n\r\n\t// set state for 'sort' dropdown\r\n\t// eslint-disable-next-line no-unused-vars\r\n\tconst [sortedProperties, setSortedProperties] = React.useState(properties)\r\n\r\n\tconst handleSort = (event) => {\r\n\t\tlet sortBy = event.target.value\r\n\t\tsortProperties(sortBy, properties, setSortedProperties)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"appContainer\">\r\n\t\t\t<Suspense fallback={<Spinner />}>\r\n\t\t\t\t<Filters />\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<ToggleViewNav />\r\n\r\n\t\t\t\t\t<div className=\"listViewList\">\r\n\t\t\t\t\t\t<FormControl sx={formControlStyles}>\r\n\t\t\t\t\t\t\t<InputLabel id=\"sort-by-select-label\">Sort By:</InputLabel>\r\n\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\tlabelId=\"sort-by-select-label\"\r\n\t\t\t\t\t\t\t\tid=\"demo-simple-select\"\r\n\t\t\t\t\t\t\t\tdefaultValue=\"bedsHighToLow\"\r\n\t\t\t\t\t\t\t\tonChange={handleSort}\r\n\t\t\t\t\t\t\t\tlabel=\"Sort By:\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{sortMenuItems.map((item, key) => (\r\n\t\t\t\t\t\t\t\t\t<MenuItem key={key} value={item.value}>\r\n\t\t\t\t\t\t\t\t\t\t{item.label}\r\n\t\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t{properties.map(\r\n\t\t\t\t\t\t\t(property) =>\r\n\t\t\t\t\t\t\t\tvalidProperty(property.price, property.bedrooms) && (\r\n\t\t\t\t\t\t\t\t\t<ListViewCard key={property.id} propertyData={property} />\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</Suspense>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tproperties: state.save.properties,\r\n\t\tminPrice: state.save.minPrice,\r\n\t\tmaxPrice: state.save.maxPrice,\r\n\t\tminBedrooms: state.save.minBedrooms,\r\n\t\tmaxBedrooms: state.save.maxBedrooms,\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps)(ListView)\r\n","export function sortProperties(sortBy, properties, setSortedProperties) {\r\n\tlet sorted = []\r\n\r\n\tif (sortBy === \"priceHighToLow\") {\r\n\t\tsorted = properties.sort((a, b) =>\r\n\t\t\tb[\"price\"] > a[\"price\"] ? 1 : a[\"price\"] > b[\"price\"] ? -1 : 0\r\n\t\t)\r\n\t\tsetSortedProperties({ sortedProperties: sorted })\r\n\t} else if (sortBy === \"priceLowToHigh\") {\r\n\t\tsorted = properties.sort((a, b) =>\r\n\t\t\ta[\"price\"] > b[\"price\"] ? 1 : b[\"price\"] > a[\"price\"] ? -1 : 0\r\n\t\t)\r\n\t\tsetSortedProperties({ sortedProperties: sorted })\r\n\t} else if (sortBy === \"bedsHighToLow\") {\r\n\t\tsorted = properties.sort((a, b) =>\r\n\t\t\tb[\"bedrooms\"] > a[\"bedrooms\"] ? 1 : a[\"bedrooms\"] > b[\"bedrooms\"] ? -1 : 0\r\n\t\t)\r\n\t\tsetSortedProperties({ sortedProperties: sorted })\r\n\t} else if (sortBy === \"bedsLowToHigh\") {\r\n\t\tsorted = properties.sort((a, b) =>\r\n\t\t\ta[\"bedrooms\"] > b[\"bedrooms\"] ? 1 : b[\"bedrooms\"] > a[\"bedrooms\"] ? -1 : 0\r\n\t\t)\r\n\t\tsetSortedProperties({ sortedProperties: sorted })\r\n\t}\r\n}\r\n"],"sourceRoot":""}