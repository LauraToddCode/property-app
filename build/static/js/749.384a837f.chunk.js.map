{"version":3,"file":"static/js/749.384a837f.chunk.js","mappings":"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","sources":["common/Spinner.js","pages/list/sortMenuItems.js","pages/list/ListView.js","pages/list/sortProperties.js"],"sourcesContent":["import React from 'react'\n\nexport function Spinner() {\n  return (\n    <div id=\"spinnerContainer\">\n      <div id=\"spinner\"></div>\n    </div>\n  )\n}\n","export const sortMenuItems = [\n\t{\n\t\tvalue: \"priceHighToLow\",\n\t\tlabel: \"Price - High to Low\",\n\t},\n\t{\n\t\tvalue: \"priceLowToHigh\",\n\t\tlabel: \"Price - Low to High\",\n\t},\n\t{\n\t\tvalue: \"bedsHighToLow\",\n\t\tlabel: \"Bedrooms - High to Low\",\n\t},\n\t{\n\t\tvalue: \"bedsLowToHigh\",\n\t\tlabel: \"Bedrooms - Low to High\",\n\t},\n]\n","import {\n\tFormControl,\n\tInputLabel,\n\tMenuItem,\n\tSelect,\n\tuseTheme,\n} from \"@mui/material\"\nimport React, { Suspense, lazy } from \"react\"\n\nimport { Spinner } from \"../../common/Spinner\"\nimport { connect } from \"react-redux\"\nimport { sortMenuItems } from \"./sortMenuItems\"\nimport { sortProperties } from \"./sortProperties\"\n\nconst Filters = lazy(() => import(\"../../common/Filters\"))\nconst ToggleViewNav = lazy(() => import(\"../../common/ToggleViewNav\"))\nconst ListViewCard = lazy(() => import(\"./ListViewCard\"))\n\nfunction ListView({\n\tproperties,\n\tminPrice,\n\tmaxPrice,\n\tminBedrooms,\n\tmaxBedrooms,\n}) {\n\tconst theme = useTheme()\n\n\tconst formControlStyles = {\n\t\tmargin: theme.spacing(1),\n\t\tminWidth: 120,\n\t}\n\n\t// conditions for a property to be valid within parameters of filters\n\tconst validProperty = (price, beds) =>\n\t\tprice >= minPrice &&\n\t\tprice <= maxPrice &&\n\t\tbeds >= minBedrooms &&\n\t\tbeds <= maxBedrooms\n\n\t// set state for 'sort' dropdown\n\t// eslint-disable-next-line no-unused-vars\n\tconst [sortedProperties, setSortedProperties] = React.useState(properties)\n\n\tconst handleSort = (event) => {\n\t\tlet sortBy = event.target.value\n\t\tsortProperties(sortBy, properties, setSortedProperties)\n\t}\n\n\treturn (\n\t\t<div className=\"appContainer\">\n\t\t\t<Suspense fallback={<Spinner />}>\n\t\t\t\t<Filters />\n\t\t\t\t<div>\n\t\t\t\t\t<ToggleViewNav />\n\n\t\t\t\t\t<div className=\"listViewList\">\n\t\t\t\t\t\t<FormControl sx={formControlStyles}>\n\t\t\t\t\t\t\t<InputLabel id=\"sort-by-select-label\">Sort By:</InputLabel>\n\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\tlabelId=\"sort-by-select-label\"\n\t\t\t\t\t\t\t\tid=\"demo-simple-select\"\n\t\t\t\t\t\t\t\tdefaultValue=\"bedsHighToLow\"\n\t\t\t\t\t\t\t\tonChange={handleSort}\n\t\t\t\t\t\t\t\tlabel=\"Sort By:\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{sortMenuItems.map((item, key) => (\n\t\t\t\t\t\t\t\t\t<MenuItem key={key} value={item.value}>\n\t\t\t\t\t\t\t\t\t\t{item.label}\n\t\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t{properties.map(\n\t\t\t\t\t\t\t(property) =>\n\t\t\t\t\t\t\t\tvalidProperty(property.price, property.bedrooms) && (\n\t\t\t\t\t\t\t\t\t<ListViewCard key={property.id} propertyData={property} />\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Suspense>\n\t\t</div>\n\t)\n}\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tproperties: state.save.properties,\n\t\tminPrice: state.save.minPrice,\n\t\tmaxPrice: state.save.maxPrice,\n\t\tminBedrooms: state.save.minBedrooms,\n\t\tmaxBedrooms: state.save.maxBedrooms,\n\t}\n}\n\nexport default connect(mapStateToProps)(ListView)\n","export function sortProperties(sortBy, properties, setSortedProperties) {\n\tlet sorted = []\n\n\tif (sortBy === \"priceHighToLow\") {\n\t\tsorted = properties.sort((a, b) =>\n\t\t\tb[\"price\"] > a[\"price\"] ? 1 : a[\"price\"] > b[\"price\"] ? -1 : 0\n\t\t)\n\t\tsetSortedProperties({ sortedProperties: sorted })\n\t} else if (sortBy === \"priceLowToHigh\") {\n\t\tsorted = properties.sort((a, b) =>\n\t\t\ta[\"price\"] > b[\"price\"] ? 1 : b[\"price\"] > a[\"price\"] ? -1 : 0\n\t\t)\n\t\tsetSortedProperties({ sortedProperties: sorted })\n\t} else if (sortBy === \"bedsHighToLow\") {\n\t\tsorted = properties.sort((a, b) =>\n\t\t\tb[\"bedrooms\"] > a[\"bedrooms\"] ? 1 : a[\"bedrooms\"] > b[\"bedrooms\"] ? -1 : 0\n\t\t)\n\t\tsetSortedProperties({ sortedProperties: sorted })\n\t} else if (sortBy === \"bedsLowToHigh\") {\n\t\tsorted = properties.sort((a, b) =>\n\t\t\ta[\"bedrooms\"] > b[\"bedrooms\"] ? 1 : b[\"bedrooms\"] > a[\"bedrooms\"] ? -1 : 0\n\t\t)\n\t\tsetSortedProperties({ sortedProperties: sorted })\n\t}\n}\n"],"names":["Spinner","_jsx","id","children","sortMenuItems","value","label","Filters","lazy","ToggleViewNav","ListViewCard","connect","state","properties","save","minPrice","maxPrice","minBedrooms","maxBedrooms","_ref","formControlStyles","margin","useTheme","spacing","minWidth","sortedProperties","setSortedProperties","React","className","_jsxs","Suspense","fallback","FormControl","sx","InputLabel","Select","labelId","defaultValue","onChange","event","sortBy","sorted","sort","a","b","sortProperties","target","map","item","key","MenuItem","property","validProperty","price","beds","bedrooms","propertyData"],"sourceRoot":""}