{"version":3,"file":"static/js/257.c7ba1eac.chunk.js","mappings":"kPAAaA,EAAgB,CAC5B,CACCC,MAAO,iBACPC,MAAO,uBAER,CACCD,MAAO,iBACPC,MAAO,uBAER,CACCD,MAAO,gBACPC,MAAO,0BAER,CACCD,MAAO,gBACPC,MAAO,2B,aCbF,SAASC,IACd,OACE,gBAAKC,GAAG,mBAAR,UACE,gBAAKA,GAAG,aAGb,CCMD,IAAMC,GAAUC,EAAAA,EAAAA,OAAK,kBAAM,4BAAN,IACfC,GAAgBD,EAAAA,EAAAA,OAAK,kBAAM,6BAAN,IACrBE,GAAeF,EAAAA,EAAAA,OAAK,kBAAM,4BAAN,IAoE1B,IAUA,GAAeG,EAAAA,EAAAA,KAVS,SAACC,GACxB,MAAO,CACNC,WAAYD,EAAME,KAAKD,WACvBE,SAAUH,EAAME,KAAKC,SACrBC,SAAUJ,EAAME,KAAKE,SACrBC,YAAaL,EAAME,KAAKG,YACxBC,YAAaN,EAAME,KAAKI,YAEzB,GAED,EA5EA,YAMI,IALHL,EAKE,EALFA,WACAE,EAIE,EAJFA,SACAC,EAGE,EAHFA,SACAC,EAEE,EAFFA,YACAC,EACE,EADFA,YAIMC,EAAoB,CACzBC,QAHaC,EAAAA,EAAAA,KAGCC,QAAQ,GACtBC,SAAU,KAYX,EAAgDC,EAAAA,SAAeX,GAA/D,eAAyBY,GAAzB,WAOA,OACC,gBAAKC,UAAU,eAAf,UACC,UAAC,EAAAC,SAAD,CAAUC,UAAU,SAACvB,EAAD,IAApB,WACC,SAACE,EAAD,KACA,4BACC,SAACE,EAAD,KAEA,iBAAKiB,UAAU,eAAf,WACC,UAACG,EAAA,EAAD,CAAaC,GAAIX,EAAjB,WACC,SAACY,EAAA,EAAD,CAAYzB,GAAG,2BAAf,uBACA,SAAC0B,EAAA,EAAD,CACCC,QAAQ,2BACR3B,GAAG,qBACH4B,aAAa,gBACbC,SAnBY,SAACC,IC3Cd,SAAwBC,EAAQxB,EAAYY,GAGnC,mBAAXY,EAIHZ,EAAoB,CAAEa,iBAHbzB,EAAW0B,MAAK,SAACC,EAAGC,GAAJ,OACxBA,EAAC,MAAYD,EAAC,MAAY,EAAIA,EAAC,MAAYC,EAAC,OAAa,EAAI,CADrC,MAIJ,mBAAXJ,EAIVZ,EAAoB,CAAEa,iBAHbzB,EAAW0B,MAAK,SAACC,EAAGC,GAAJ,OACxBD,EAAC,MAAYC,EAAC,MAAY,EAAIA,EAAC,MAAYD,EAAC,OAAa,EAAI,CADrC,MAIJ,kBAAXH,EAIVZ,EAAoB,CAAEa,iBAHbzB,EAAW0B,MAAK,SAACC,EAAGC,GAAJ,OACxBA,EAAC,SAAeD,EAAC,SAAe,EAAIA,EAAC,SAAeC,EAAC,UAAgB,EAAI,CADjD,MAIJ,kBAAXJ,GAIVZ,EAAoB,CAAEa,iBAHbzB,EAAW0B,MAAK,SAACC,EAAGC,GAAJ,OACxBD,EAAC,SAAeC,EAAC,SAAe,EAAIA,EAAC,SAAeD,EAAC,UAAgB,EAAI,CADjD,KAK1B,CDqBCE,CADaN,EAAMO,OAAOxC,MACHU,EAAYY,EACnC,EAYK,SAMEvB,EAAc0C,KAAI,SAACC,EAAMC,GAAP,OAClB,SAACC,EAAA,EAAD,CAAoB5C,MAAO0C,EAAK1C,MAAhC,SACE0C,EAAKzC,OADQ0C,EADG,SAOpBjC,EAAW+B,KACX,SAACI,GAAD,OAvCiBC,EAwCFD,EAASC,MAxCAC,EAwCOF,EAASG,SAvC7CF,GAASlC,GACTkC,GAASjC,GACTkC,GAAQjC,GACRiC,GAAQhC,IAqCD,SAACR,EAAD,CAAgC0C,aAAcJ,GAA3BA,EAAS1C,IAzCd,IAAC2C,EAAOC,CAuCxB,cAUN,G","sources":["pages/list/sortMenuItems.js","common/Spinner.js","pages/list/ListView.js","pages/list/sortProperties.js"],"sourcesContent":["export const sortMenuItems = [\n\t{\n\t\tvalue: \"priceHighToLow\",\n\t\tlabel: \"Price - High to Low\",\n\t},\n\t{\n\t\tvalue: \"priceLowToHigh\",\n\t\tlabel: \"Price - Low to High\",\n\t},\n\t{\n\t\tvalue: \"bedsHighToLow\",\n\t\tlabel: \"Bedrooms - High to Low\",\n\t},\n\t{\n\t\tvalue: \"bedsLowToHigh\",\n\t\tlabel: \"Bedrooms - Low to High\",\n\t},\n]\n","import React from 'react'\n\nexport function Spinner() {\n  return (\n    <div id=\"spinnerContainer\">\n      <div id=\"spinner\"></div>\n    </div>\n  )\n}\n","import {\n\tFormControl,\n\tInputLabel,\n\tMenuItem,\n\tSelect,\n\tuseTheme,\n} from \"@mui/material\"\nimport React, { Suspense, lazy } from \"react\"\n\nimport { connect } from \"react-redux\"\nimport { sortMenuItems } from \"./sortMenuItems\"\nimport { sortProperties } from \"./sortProperties\"\nimport { Spinner } from \"../../common/Spinner\"\n\nconst Filters = lazy(() => import(\"../../common/Filters\"))\nconst ToggleViewNav = lazy(() => import(\"../../common/ToggleViewNav\"))\nconst ListViewCard = lazy(() => import(\"./ListViewCard\"))\n\nfunction ListView({\n\tproperties,\n\tminPrice,\n\tmaxPrice,\n\tminBedrooms,\n\tmaxBedrooms,\n}) {\n\tconst theme = useTheme()\n\n\tconst formControlStyles = {\n\t\tmargin: theme.spacing(1),\n\t\tminWidth: 120,\n\t}\n\n\t// conditions for a property to be valid within parameters of filters\n\tconst validProperty = (price, beds) =>\n\t\tprice >= minPrice &&\n\t\tprice <= maxPrice &&\n\t\tbeds >= minBedrooms &&\n\t\tbeds <= maxBedrooms\n\n\t// set state for 'sort' dropdown\n\t// eslint-disable-next-line no-unused-vars\n\tconst [sortedProperties, setSortedProperties] = React.useState(properties)\n\n\tconst handleSort = (event) => {\n\t\tlet sortBy = event.target.value\n\t\tsortProperties(sortBy, properties, setSortedProperties)\n\t}\n\n\treturn (\n\t\t<div className=\"appContainer\">\n\t\t\t<Suspense fallback={<Spinner />}>\n\t\t\t\t<Filters />\n\t\t\t\t<div>\n\t\t\t\t\t<ToggleViewNav />\n\n\t\t\t\t\t<div className=\"listViewList\">\n\t\t\t\t\t\t<FormControl sx={formControlStyles}>\n\t\t\t\t\t\t\t<InputLabel id=\"demo-simple-select-label\">Sort By:</InputLabel>\n\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\tlabelId=\"demo-simple-select-label\"\n\t\t\t\t\t\t\t\tid=\"demo-simple-select\"\n\t\t\t\t\t\t\t\tdefaultValue=\"bedsHighToLow\"\n\t\t\t\t\t\t\t\tonChange={handleSort}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{sortMenuItems.map((item, key) => (\n\t\t\t\t\t\t\t\t\t<MenuItem key={key} value={item.value}>\n\t\t\t\t\t\t\t\t\t\t{item.label}\n\t\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t{properties.map(\n\t\t\t\t\t\t\t(property) =>\n\t\t\t\t\t\t\t\tvalidProperty(property.price, property.bedrooms) && (\n\t\t\t\t\t\t\t\t\t<ListViewCard key={property.id} propertyData={property} />\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Suspense>\n\t\t</div>\n\t)\n}\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tproperties: state.save.properties,\n\t\tminPrice: state.save.minPrice,\n\t\tmaxPrice: state.save.maxPrice,\n\t\tminBedrooms: state.save.minBedrooms,\n\t\tmaxBedrooms: state.save.maxBedrooms,\n\t}\n}\n\nexport default connect(mapStateToProps)(ListView)\n","export function sortProperties(sortBy, properties, setSortedProperties) {\n\tlet sorted = []\n\n\tif (sortBy === \"priceHighToLow\") {\n\t\tsorted = properties.sort((a, b) =>\n\t\t\tb[\"price\"] > a[\"price\"] ? 1 : a[\"price\"] > b[\"price\"] ? -1 : 0\n\t\t)\n\t\tsetSortedProperties({ sortedProperties: sorted })\n\t} else if (sortBy === \"priceLowToHigh\") {\n\t\tsorted = properties.sort((a, b) =>\n\t\t\ta[\"price\"] > b[\"price\"] ? 1 : b[\"price\"] > a[\"price\"] ? -1 : 0\n\t\t)\n\t\tsetSortedProperties({ sortedProperties: sorted })\n\t} else if (sortBy === \"bedsHighToLow\") {\n\t\tsorted = properties.sort((a, b) =>\n\t\t\tb[\"bedrooms\"] > a[\"bedrooms\"] ? 1 : a[\"bedrooms\"] > b[\"bedrooms\"] ? -1 : 0\n\t\t)\n\t\tsetSortedProperties({ sortedProperties: sorted })\n\t} else if (sortBy === \"bedsLowToHigh\") {\n\t\tsorted = properties.sort((a, b) =>\n\t\t\ta[\"bedrooms\"] > b[\"bedrooms\"] ? 1 : b[\"bedrooms\"] > a[\"bedrooms\"] ? -1 : 0\n\t\t)\n\t\tsetSortedProperties({ sortedProperties: sorted })\n\t}\n}\n"],"names":["sortMenuItems","value","label","Spinner","id","Filters","lazy","ToggleViewNav","ListViewCard","connect","state","properties","save","minPrice","maxPrice","minBedrooms","maxBedrooms","formControlStyles","margin","useTheme","spacing","minWidth","React","setSortedProperties","className","Suspense","fallback","FormControl","sx","InputLabel","Select","labelId","defaultValue","onChange","event","sortBy","sortedProperties","sort","a","b","sortProperties","target","map","item","key","MenuItem","property","price","beds","bedrooms","propertyData"],"sourceRoot":""}